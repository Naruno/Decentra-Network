name: Functional Tests

on: 
  push:
    paths:
      - '.github/workflows/functional_tests.yml'
      - 'docker/local/api/**'
      - 'src/**'  
      - 'requirements/**'
      - 'functional_test/docker/**'
  pull_request:
    paths:
      - '.github/workflows/functional_tests.yml'
      - 'docker/local/api/**'
      - 'src/**'  
      - 'requirements/**'
      - 'functional_test/**'

jobs:

  build1:
    name: 1
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies and run tests
      run: |
        pip install pytest
        cd ..
        docker build -t decentra-network-api -f Decentra-Network/docker/local/api/Dockerfile .
        pytest Decentra-Network/functional_test/docker/test_decentra_network_docker.py 
  
  build2:
    name: 2
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies and run tests
      run: |
        pip install pytest
        cd ..
        docker build -t decentra-network-api -f Decentra-Network/docker/local/api/Dockerfile .
        pytest Decentra-Network/functional_test/docker/test_decentra_network_docker.py 
  
  build3:
    name: 3
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies and run tests
      run: |
        pip install pytest
        cd ..
        docker build -t decentra-network-api -f Decentra-Network/docker/local/api/Dockerfile .
        pytest Decentra-Network/functional_test/docker/test_decentra_network_docker.py 
  
  build4:
    name: 4
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies and run tests
      run: |
        pip install pytest
        cd ..
        docker build -t decentra-network-api -f Decentra-Network/docker/local/api/Dockerfile .
        pytest Decentra-Network/functional_test/docker/test_decentra_network_docker.py 
  
  build5:
    name: 5
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies and run tests
      run: |
        pip install pytest
        cd ..
        docker build -t decentra-network-api -f Decentra-Network/docker/local/api/Dockerfile .
        pytest Decentra-Network/functional_test/docker/test_decentra_network_docker.py 
  
  build6:
    name: 6
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies and run tests
      run: |
        pip install pytest
        cd ..
        docker build -t decentra-network-api -f Decentra-Network/docker/local/api/Dockerfile .
        pytest Decentra-Network/functional_test/docker/test_decentra_network_docker.py 
  
  build7:
    name: 7
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies and run tests
      run: |
        pip install pytest
        cd ..
        docker build -t decentra-network-api -f Decentra-Network/docker/local/api/Dockerfile .
        pytest Decentra-Network/functional_test/docker/test_decentra_network_docker.py 
  
  build8:
    name: 8
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies and run tests
      run: |
        pip install pytest
        cd ..
        docker build -t decentra-network-api -f Decentra-Network/docker/local/api/Dockerfile .
        pytest Decentra-Network/functional_test/docker/test_decentra_network_docker.py 
  
  build9:
    name: 9
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies and run tests
      run: |
        pip install pytest
        cd ..
        docker build -t decentra-network-api -f Decentra-Network/docker/local/api/Dockerfile .
        pytest Decentra-Network/functional_test/docker/test_decentra_network_docker.py 
  
  build10:
    name: 10
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies and run tests
      run: |
        pip install pytest
        cd ..
        docker build -t decentra-network-api -f Decentra-Network/docker/local/api/Dockerfile .
        pytest Decentra-Network/functional_test/docker/test_decentra_network_docker.py 
  
